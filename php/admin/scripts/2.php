<?php
   /*
     * $Id$
     *
     * MAIA MAILGUARD LICENSE v.1.0
     *
     * Copyright 2004 by Robert LeBlanc <rjl@renaissoft.com>
     *                   David Morton <mortonda@dgrmm.net>
     * All rights reserved.
     *
     * PREAMBLE
     *
     * This License is designed for users of Maia Mailguard
     * ("the Software") who wish to support the Maia Mailguard project by
     * leaving "Maia Mailguard" branding information in the HTML output
     * of the pages generated by the Software, and providing links back
     * to the Maia Mailguard home page.  Users who wish to remove this
     * branding information should contact the copyright owner to obtain
     * a Rebranding License.
     *
     * DEFINITION OF TERMS
     *
     * The "Software" refers to Maia Mailguard, including all of the
     * associated PHP, Perl, and SQL scripts, documentation files, graphic
     * icons and logo images.
     *
     * GRANT OF LICENSE
     *
     * Redistribution and use in source and binary forms, with or without
     * modification, are permitted provided that the following conditions
     * are met:
     *
     * 1. Redistributions of source code must retain the above copyright
     *    notice, this list of conditions and the following disclaimer.
     *
     * 2. Redistributions in binary form must reproduce the above copyright
     *    notice, this list of conditions and the following disclaimer in the
     *    documentation and/or other materials provided with the distribution.
     *
     * 3. The end-user documentation included with the redistribution, if
     *    any, must include the following acknowledgment:
     *
     *    "This product includes software developed by Robert LeBlanc
     *    <rjl@renaissoft.com>."
     *
     *    Alternately, this acknowledgment may appear in the software itself,
     *    if and wherever such third-party acknowledgments normally appear.
     *
     * 4. At least one of the following branding conventions must be used:
     *
     *    a. The Maia Mailguard logo appears in the page-top banner of
     *       all HTML output pages in an unmodified form, and links
     *       directly to the Maia Mailguard home page; or
     *
     *    b. The "Powered by Maia Mailguard" graphic appears in the HTML
     *       output of all gateway pages that lead to this software,
     *       linking directly to the Maia Mailguard home page; or
     *
     *    c. A separate Rebranding License is obtained from the copyright
     *       owner, exempting the Licensee from 4(a) and 4(b), subject to
     *       the additional conditions laid out in that license document.
     *
     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS
     * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
     * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
     * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
     * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
     * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
     * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
     * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
     * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
     * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     *
     */

  function pre_check_2() {
    if (table_exists("maia_themes")) {
      return array(false, "Already exists");
    } else {
      return array(true,"");
    }
  }
  
  function upgrade_2() {
    global $dbh;
    
    
    if (is_mysql()) {   
        $sql_stmts = array("CREATE TABLE maia_themes ( " .
                     "id int(10) unsigned NOT NULL auto_increment, " .
                     "name varchar(30) NOT NULL, " .
                     "path varchar(30) NOT NULL, " .
                     "PRIMARY KEY (id), UNIQUE KEY name (name), UNIQUE KEY path (path), " .
                     "KEY name_2 (name), KEY path_2 (path) " .
                     " ) TYPE=InnoDB; ",
                     
                    "ALTER TABLE `maia_users` ADD `theme_id` INT UNSIGNED NOT NULL default '1'",
                    "ALTER TABLE `maia_users` ADD INDEX (`theme_id` )"
                    );
    } else {
      $sql_stmts = array("CREATE TABLE maia_themes (
                          id        SERIAL PRIMARY KEY,
                          name      VARCHAR(30) NOT NULL,
                          path      VARCHAR(30) NOT NULL)",
                          
                         "ALTER TABLE maia_users ADD theme_id INTEGER",
                         "ALTER TABLE maia_users ALTER theme_id SET DEFAULT '1'",
                         "UPDATE maia_users SET theme_id = '1'",
                         "ALTER TABLE maia_users ALTER theme_id SET NOT NULL",
                         "CREATE INDEX theme_id ON maia_users (theme_id)"
                        );
      
    }
    foreach ($sql_stmts as $sql) {
       $result = $dbh->query($sql);
       if (PEAR::isError($result)) {
	$str = $result->getMessage() . " = [" . $sql . "]" ;
         /* return array(false, $result->getMessage()); */
         return array(false, $str ); 
       }
    }
        
    $sql = "INSERT INTO maia_themes VALUES (?, ?, ?)";

    $sth = $dbh->prepare($sql);
    
    $params = array(
                  array(1,"Maia Blue", "default"),
                  array(2,"Mild Brown", "test1"),
                  array(3,"DGM", "dgm")
              );
    
    foreach ($params as $p) {
      $result = $dbh->execute($sth, $p);
      if (PEAR::isError($result)) {
         return array(false, $result->getMessage()); 
      }
    }
    
    return array(true,"");
  }
  
  function post_check_2() {
    if (! column_exists("maia_users", "theme_id")) {
      return array(false, "Error creating");
    } else {
      return array(true,"");
    }
    
  }
  
?>

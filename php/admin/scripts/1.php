<?php
   /*
     * $Id$
     *
     * MAIA MAILGUARD LICENSE v.1.0
     *
     * Copyright 2004 by Robert LeBlanc <rjl@renaissoft.com>
     *                   David Morton <mortonda@dgrmm.net>
     * All rights reserved.
     *
     * PREAMBLE
     *
     * This License is designed for users of Maia Mailguard
     * ("the Software") who wish to support the Maia Mailguard project by
     * leaving "Maia Mailguard" branding information in the HTML output
     * of the pages generated by the Software, and providing links back
     * to the Maia Mailguard home page.  Users who wish to remove this
     * branding information should contact the copyright owner to obtain
     * a Rebranding License.
     *
     * DEFINITION OF TERMS
     *
     * The "Software" refers to Maia Mailguard, including all of the
     * associated PHP, Perl, and SQL scripts, documentation files, graphic
     * icons and logo images.
     *
     * GRANT OF LICENSE
     *
     * Redistribution and use in source and binary forms, with or without
     * modification, are permitted provided that the following conditions
     * are met:
     *
     * 1. Redistributions of source code must retain the above copyright
     *    notice, this list of conditions and the following disclaimer.
     *
     * 2. Redistributions in binary form must reproduce the above copyright
     *    notice, this list of conditions and the following disclaimer in the
     *    documentation and/or other materials provided with the distribution.
     *
     * 3. The end-user documentation included with the redistribution, if
     *    any, must include the following acknowledgment:
     *
     *    "This product includes software developed by Robert LeBlanc
     *    <rjl@renaissoft.com>."
     *
     *    Alternately, this acknowledgment may appear in the software itself,
     *    if and wherever such third-party acknowledgments normally appear.
     *
     * 4. At least one of the following branding conventions must be used:
     *
     *    a. The Maia Mailguard logo appears in the page-top banner of
     *       all HTML output pages in an unmodified form, and links
     *       directly to the Maia Mailguard home page; or
     *
     *    b. The "Powered by Maia Mailguard" graphic appears in the HTML
     *       output of all gateway pages that lead to this software,
     *       linking directly to the Maia Mailguard home page; or
     *
     *    c. A separate Rebranding License is obtained from the copyright
     *       owner, exempting the Licensee from 4(a) and 4(b), subject to
     *       the additional conditions laid out in that license document.
     *
     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS
     * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
     * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
     * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
     * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
     * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
     * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
     * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
     * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
     * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     *
     */

  function pre_check_1() {
      global $dbh;
      
      if (is_mysql()) {
        // this upgrade is postgresql only, return true
       return array(true,"");
      }  
     
      $select = "select relkind from pg_class WHERE relname = 'users_idx_email'";
     
      $sth = $dbh->query($select); 
      if (PEAR::isError($sth)) {
          return array(false, $sth->getMessage()); 
      }
      
      if ($row=$sth->fetchrow()) {
        return array(false, "Already exists");
      } else {
       return array(true,"");
      }
  }
  
  function upgrade_1() {
    global $dbh;
    
    if (!is_mysql()) {
      $alter_stmts = array(
            "CREATE UNIQUE INDEX users_idx_email ON users(email)",
            "CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email)",
            "CREATE UNIQUE INDEX maia_languages_idx_abbreviation ON maia_languages(abbreviation)",
            "CREATE UNIQUE INDEX maia_users_idx_user_name ON maia_users(user_name)",
            "CREATE UNIQUE INDEX maia_domains_idx_domain ON maia_domains(domain)",
            "CREATE INDEX maia_mail_idx_received_date ON maia_mail(received_date)",
            "CREATE INDEX maia_mail_recipients_idx_type ON maia_mail_recipients(type)"  ,
            "CREATE INDEX maia_mail_recipients_idx_mail_id ON maia_mail_recipients(mail_id)",
            "CREATE UNIQUE INDEX maia_viruses_idx_virus_name ON maia_viruses(virus_name)",
            "CREATE UNIQUE INDEX maia_sa_rules_idx_rule_name ON maia_sa_rules(rule_name)"
            );
      
      foreach ($alter_stmts as $alter) {
        $result = $dbh->query($alter);
        if (PEAR::isError($result)) {
          return array(false, $result->getMessage()); 
        }
      }
    }
    return array(true,"");
  }
  
  function post_check_1() {
    global $dbh;
   
    if (is_mysql()) {
      // this upgrade is postgresql only, return true
     return array(true,"");
    }  
    
   
    $select = "select relkind from pg_class WHERE relname = 'maia_sa_rules_idx_rule_name'";
   
    $sth = $dbh->query($select); 
    
    if (PEAR::isError($sth)) {
        return array(false, $sth->getMessage()); 
    }
    
    if (! $row=$sth->fetchrow()) {
      return array(false, "Error creating");
    } else {
     return array(true,"");
    }    
  }



?>